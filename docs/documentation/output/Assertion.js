Ext.data.JsonP.Assertion({"tagname":"class","name":"Assertion","autodetected":{},"files":[{"filename":"should.js","href":null}],"params":[{"tagname":"params","type":"*","name":"obj","doc":"<p>@api private</p>\n","html_type":"*"}],"members":[{"name":"any","tagname":"property","owner":"Assertion","id":"property-any","meta":{}},{"name":"exports","tagname":"property","owner":"Assertion","id":"property-exports","meta":{}},{"name":"not","tagname":"property","owner":"Assertion","id":"property-not","meta":{}},{"name":"should","tagname":"property","owner":"Assertion","id":"property-should","meta":{}},{"name":"","tagname":"method","owner":"Assertion","id":"method-","meta":{}},{"name":"add","tagname":"method","owner":"Assertion","id":"method-add","meta":{}},{"name":"inherits","tagname":"method","owner":"Assertion","id":"method-inherits","meta":{}},{"name":"isWrapperType","tagname":"method","owner":"Assertion","id":"method-isWrapperType","meta":{}},{"name":"merge","tagname":"method","owner":"Assertion","id":"method-merge","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Assertion","short_doc":"Initialize a new Assertion with the given obj. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>Initialize a new <code>Assertion</code> with the given <em>obj</em>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : *<div class='sub-desc'><p>@api private</p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-any' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-property-any' class='name expandable'>any</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Any modifier - it affect on execution of sequenced assertion to do not check all, but any of</p>\n\n<p>@api public</p>\n</div><div class='long'><p>Any modifier - it affect on execution of sequenced assertion to do not check all, but any of</p>\n\n<p>@api public</p>\n</div></div></div><div id='property-exports' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-property-exports' class='name expandable'>exports</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Expose should to external world.</p>\n</div><div class='long'><p>Expose should to external world.</p>\n</div></div></div><div id='property-not' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-property-not' class='name expandable'>not</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Negation modifier. ...</div><div class='long'><p>Negation modifier.</p>\n\n<p>@api public</p>\n</div></div></div><div id='property-should' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-property-should' class='name expandable'>should</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Expose api via Object#should. ...</div><div class='long'><p>Expose api via <code>Object#should</code>.</p>\n\n<p>@api public</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-method-' class='name expandable'></a>( <span class='pre'>obj, opts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Echos the value of a value. ...</div><div class='long'><p>Echos the value of a value. Trys to print the value out\nin the best way possible given the different types.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>The object to print out.</p>\n</div></li><li><span class='pre'>opts</span> : Object<div class='sub-desc'><p>Optional options object that alters the output.</p>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-method-add' class='name expandable'>add</a>( <span class='pre'>name, f, isGetter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Way to extend Assertion function. ...</div><div class='long'><p>Way to extend Assertion function. It uses some logic\nto define only positive assertions and itself rule with negative assertion.</p>\n\n<p>All actions happen in subcontext and this method take care about negation.\nPotentially we can add some more modifiers that does not depends from state of assertion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>f</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>isGetter</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-inherits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-method-inherits' class='name expandable'>inherits</a>( <span class='pre'>ctor, superCtor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Inherit the prototype methods from one constructor into another. ...</div><div class='long'><p>Inherit the prototype methods from one constructor into another.</p>\n\n<p>The Function.prototype.inherits from lang.js rewritten as a standalone\nfunction (not on Function.prototype). NOTE: If this file is to be loaded\nduring bootstrapping this function needs to be rewritten using some native\nfunctions as prototype setup using normal JavaScript does not work as\nexpected during bootstrapping (see mirror.js in r114903).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctor</span> : function<div class='sub-desc'><p>Constructor function which needs to inherit the\n    prototype.</p>\n</div></li><li><span class='pre'>superCtor</span> : function<div class='sub-desc'><p>Constructor function to inherit prototype from.</p>\n</div></li></ul></div></div></div><div id='method-isWrapperType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-method-isWrapperType' class='name expandable'>isWrapperType</a>( <span class='pre'>obj</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if given obj just a primitive type wrapper ...</div><div class='long'><p>Check if given obj just a primitive type wrapper</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>@api private</p>\n</div></li></ul></div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Assertion'>Assertion</span><br/></div><a href='#!/api/Assertion-method-merge' class='name expandable'>merge</a>( <span class='pre'>a, b</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Merge object b with object a. ...</div><div class='long'><p>Merge object b with object a.</p>\n\n<pre><code>var a = { foo: 'bar' }\n  , b = { bar: 'baz' };\n\nutils.merge(a, b);\n// =&gt; { foo: 'bar', bar: 'baz' }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>b</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>@api private</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});